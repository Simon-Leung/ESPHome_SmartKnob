esphome:
  name: smartknob
  friendly_name: SmartKnob

esp32:
  board: esp32s3box
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "U7eA0nj9vzx+XTQDzh2JfEXmrAzgBH3uYGw8D3uAW/I="

ota:
  password: "263ee1e43a4f25271f694db8fe6d298b"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Smartknob Fallback Hotspot"
    password: !secret wifi_ap_password

web_server:
  port: 80

captive_portal:

spi:
  clk_pin: GPIO47
  mosi_pin: GPIO41

script:
  - id: backlight_script
    mode: restart
    then:
      - light.turn_on: back_light
      - delay: 1 min
      - light.turn_on: back_light
      - delay: 0.5 min
      - light.turn_off: back_light

  # - id: set_light_rgb
  #   mode: restart
  #   alias: 'ESPHome RGB light set'
  #   sequence:
  #   - service: light.turn_on
  #     data_template:
  #       entity_id: '{{ light_name }}'
  #       rgb_color:
  #       - '{{ red }}'
  #       - '{{ green }}'
  #       - '{{ blue }}'
  
binary_sensor:
  - platform: status
    name: "Node Status"
    id: system_status
    
  - platform: gpio
    pin: GPIO3
    id: "btn"
    name: "btn"
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      then:
        - script.execute: backlight_script
    on_release:
      then:
        - script.execute: backlight_script
    on_click:
      min_length: 50ms
      max_length: 350ms
      then:
        - logger.log: "Clicked"
        # - display.page.show_next: lcd
    on_double_click:
      min_length: 50ms
      max_length: 350ms
      then:
        - logger.log: "Double-Clicked"
      #   - display.page.show_previous: lcd
    on_multi_click:
    - timing:
      - ON for at most 1s
      then:
        - logger.log: "LONG-Clicked"
      #   - display.page.show: page_main

time:
  - platform: homeassistant
    id: esptime

text_sensor:
  - platform: wifi_info
    ip_address:
      # name: ESP IP Address
      id: ip_address
      
  - platform: homeassistant
    id: weather
    name: "Weather Forecast From Home Assistant"
    entity_id: weather.forecast_home
    
  - platform: homeassistant
    id: humidity
    name: "Humidity From Home Assistant"
    entity_id: sensor.ambient_humidity
    
  - platform: homeassistant
    id: temperature
    name: "Temperature From Home Assistant"
    entity_id: sensor.ambient_temperature

sensor:    
  - platform: rotary_encoder
    id: "knob_encoder"
    name: "Rotary Encoder"
    pin_a: GPIO5
    pin_b: GPIO6   
    on_anticlockwise:
      - script.execute: backlight_script
    on_clockwise:
      - script.execute: backlight_script
    on_value:
      - script.execute: backlight_script

# Define pins for backlight display and back LED1
output:
  - platform: ledc
    pin: GPIO38
    id: former_led_pin

# Define a monochromatic, dimmable light for the backlight
light:
  - platform: monochromatic
    output: former_led_pin
    name: "Display Backlight"
    id: back_light
    restore_mode: ALWAYS_ON

external_components:
  - source:
      type: git
      url: https://github.com/lukasz-tuz/esphome-gui
      ref: main
    components: [ display, gui ]

display:
  - platform: st7701s
    id: disp
    color_order: RGB
    dimensions:
      width: 480
      height: 480
    cs_pin: 21
    de_pin: 39
    hsync_pin: 40
    vsync_pin: 48
    pclk_pin: 45
    
    data_pins:
      red:
        - 10        #r1
        - 16        #r2
        - 9         #r3
        - 15        #r4
        - 46        #r5
      green:
        - 8         #g0
        - 13        #g1
        - 18        #g2
        - 12        #g3
        - 11        #g4
        - 17        #g5
      blue:
        - 47        #b1
        - 41        #b2
        - 0         #b3
        - 42        #b4
        - 14        #b5

gui:
  id: mygui
  display_id: disp
  rotary_encoders:
    sensor: encoder
    binary_sensor: pushbutton
    group: general
  color_depth: 16
  bg_color: 0x0F0F0F
  text_font: unscii_8
  align: center
  style_definitions:
    - id: date_style
      text_font: unscii_8
      align: center
      text_color: 0x000000
      bg_opa: cover
      radius: 4
      pad_all: 2
  widgets:
    - meter:
        height: 240
        width: 240
        align: center
        bg_color: 0
        scales: # Color bars
          angle_range: 360
          rotation: 255
          range_from: 0
          range_to: 12
          ticks:
            width: 35
            count: 13
            length: 8
          indicators:
            - ticks:
                local: true
                start_value: 0
                end_value: 12
                color_start: 0xFF0000
                color_end: 0x0000FF
    - meter:
        height: 240
        width: 240
        align: center
        widgets:
          - label:
              styles: date_style
              y: -20
              text: !lambda |-
                static const char * const day_names[] = {"SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"};
                return day_names[id(time_comp).now().day_of_week-1];
          - label:
              styles: date_style
              y: +20
              text: !lambda |-
                static const char * const mon_names[] = {"JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"};
                static char date_buf[8];
                auto now = id(time_comp).now();
                snprintf(date_buf, sizeof(date_buf), "%s %2d", mon_names[now.month-1], now.day_of_month);
                return date_buf;
              
        bg_opa: TRANSP
        text_color: 0xFFFFFF
        scales:
          - ticks:
              width: 1
              count: 61
              length: 10
              color: 0xFFFFFF
            range_from: 0
            range_to: 60
            angle_range: 360
            rotation: 270
            indicators:
              - line:
                  id: minute_hand
                  value: !lambda |-
                    return id(time_comp).now().minute;
                  width: 3
                  color: 0xE0E0E0
                  r_mod: -1

          - 
            angle_range: 330
            rotation: 300
            range_from: 1
            range_to: 12
            ticks:
              width: 1
              count: 12
              length: 1
              major:
                stride: 1
                width: 4
                length: 8
                color: 0xC0C0C0
                label_gap: 6

          - angle_range: 360
            rotation: 270
            range_from: 0
            range_to: 720
            indicators:
              - line:
                  id: hour_hand
                  value: !lambda |-
                    auto now = id(time_comp).now();
                    return std::fmod(now.hour, 12) * 60 + now.minute;
                  width: 4
                  color: 0xA0A0A0
                  r_mod: -20
