esphome:
  name: smartknob
  friendly_name: SmartKnob
  platformio_options:
    board_build.flash_mode: dio # If you don't specify this using esp-idf framework, the device will boot-loop.
  on_boot:
    priority: 600
    then:
      - logger.log: "Hello World"
      - script.execute: backlight_script

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  flash_size: 16MB
  framework:
    type: esp-idf
    version: 5.1.2
    platform_version: 6.5.0
    # version: 5.0.0
    # platform_version: 6.0.0
    sdkconfig_options:
      CONFIG_COMPILER_OPTIMIZATION_PERF: "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_16B: "n"
      CONFIG_ESP32S3_DATA_CACHE_LINE_32B: "n"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_SIZE: "64"
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: "y"
      CONFIG_SPIRAM_RODATA: "y"

psram:
  mode: octal
  speed: 120000000.0

external_components:
  - source:
      type: git
      url: https://github.com/Simon-Leung/ESPHome_SmartKnob
      ref: master
    components: [ spi, st7701s, lvgl ]

# Enable logging
logger:
  hardware_uart: UART0
  baud_rate: 115200

# Enable Home Assistant API
api:
  encryption:
    key: "U7eA0nj9vzx+XTQDzh2JfEXmrAzgBH3uYGw8D3uAW/I="

ota:
  password: "263ee1e43a4f25271f694db8fe6d298b"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Smartknob Fallback Hotspot"
    password: !secret wifi_ap_password

web_server:
  port: 80

captive_portal:

script:
  - id: backlight_script
    mode: restart
    then:
      - light.turn_on: 
          id: back_light
          brightness: 100%
      - delay: 30s
      - light.turn_on:
          id: back_light
          brightness: 50%
      - delay: 12s
      - light.turn_off: back_light
  - id: update_display
    then:
      - lvgl.arc.update:
          id: myarc
          value: !lambda return id(knob_encoder).raw_state; #multiply by 10 because LVGL meter only supports integers
  
binary_sensor:
  - platform: status
    name: "Node Status"
    id: system_status
    
  - platform: gpio
    pin: 
      number: GPIO3
      inverted: True
    id: btn
    name: "btn"
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      then:
        - logger.log: "on_press"
        - script.execute: backlight_script
    on_release:
      then:
        - logger.log: "on_release"
    on_click:
      min_length: 400ms
      max_length: 5000ms
      then:
        - logger.log: "LONG-Clicked"
    on_double_click:
      then:
        - logger.log: "Double-Clicked"
    on_multi_click:
    - timing:
      - ON for 50ms to 350ms
      - OFF for at least 0.5s
      then:
        - logger.log: "Clicked"

time:
  - platform: homeassistant
    id: esptime

text_sensor:
  - platform: wifi_info
    ip_address:
      # name: ESP IP Address
      id: ip_address
      
  - platform: homeassistant
    id: weather
    name: "Weather Forecast From Home Assistant"
    entity_id: weather.forecast_home
    
  - platform: homeassistant
    id: humidity
    name: "Humidity From Home Assistant"
    entity_id: sensor.ambient_humidity
    
  - platform: homeassistant
    id: temperature
    name: "Temperature From Home Assistant"
    entity_id: sensor.ambient_temperature

sensor:    
  - platform: rotary_encoder
    id: "knob_encoder"
    name: "Rotary Encoder"
    pin_a: GPIO5
    pin_b: GPIO6   
    on_anticlockwise:
      - logger.log: "on_anticlockwise"
      - script.execute: backlight_script
    on_clockwise:
      - logger.log: "on_clockwise"
      - script.execute: backlight_script
    on_value:
      - logger.log: "rotary on_value"
      - script.execute: backlight_script

# Define pins for backlight display and back LED1
output:
  - platform: ledc
    pin: GPIO38
    id: former_led_pin

# Define a monochromatic, dimmable light for the backlight
light:
  - platform: monochromatic
    output: former_led_pin
    name: "Display Backlight"
    id: back_light

spi:
  clk_pin:
    number: GPIO47
    allow_other_uses: True
  mosi_pin: 
    number: GPIO41
    allow_other_uses: True

display:
  - platform: st7701s
    id: disp
    auto_clear_enabled: False
    color_order: RGB
    dimensions:
      width: 480
      height: 480
    cs_pin: 21
    de_pin: 39
    hsync_pin: 40
    vsync_pin: 48
    pclk_pin: 45
    init_sequence:
      - 2 # select canned init sequence number 1
      # - [ 0xE0, 0x1F ]  # Set sunlight readable enhancement
    
    data_pins:
      red:
        - 10        #r1
        - 16        #r2
        - 9         #r3
        - 15        #r4
        - 46        #r5
      green:
        - 8         #g0
        - 13        #g1
        - 18        #g2
        - 12        #g3
        - 11        #g4
        - 17        #g5
      blue:
        - number: 47        #b1
          allow_other_uses: True
        - number: 41        #b2
          allow_other_uses: True
        - 0         #b3
        - 42        #b4
        - 14        #b5
    # lambda: |-
    #   it.line(240, 240, 340, 240);
    #   // Circles! Let's draw one with the center at [20,40] and a radius of 10
    #   it.circle(240, 240, 100);

# gui:
#   id: mygui
#   display_id: disp
#   rotary_encoder:
#     encoder: knob_encoder
#     binary_sensor: btn
#   widgets:
#     - label:
#         id: otherlabel
#         position: 240, 240
#         dimensions: 200x50
#         text: "Hello!"
lvgl:
  id: mygui
  display_id: disp
  rotary_encoders:
    sensor: knob_encoder
    binary_sensor: btn
    inverted: True
    group: general
  color_depth: 16
  bg_color: 0x0F0F0F
  text_font: unscii_8
  align: center
  style_definitions:
    - id: date_style
      text_font: unscii_8
      align: center
      text_color: 0x000000
      bg_opa: cover
      radius: 4
      pad_all: 2
    - id: font_style
      text_font: MONTSERRAT_24
      align: center
      text_color: 0xFFFFFF
      #bg_opa: cover
      bg_opa: TRANSP
      bg_color: 0
      radius: 4
      pad_all: 2 
    - id: button_style
      align: center
      text_color: 0xFFFFFF
      bg_color: 0x4ED0FF
      bg_grad_color: 0x4ED0FF
      bg_opa: 100%
      radius: 4
      pad_all: 2 
  page_wrap: true
  pages:
    - id: main_page
      widgets:
        - label:
            styles: font_style
            text_font: MONTSERRAT_36 # override font size
            y: 30
            x: 30
            text: "Hello World!"
        - btn:
            id: btn_main1
            styles: button_style
            y: -100
            height: 50
            width: 200
            group: general
            on_click: 
              then:
                - lvgl.page.show: arc_page
            widgets:
              label:
                styles: font_style
                text: "Arc Page"
        - btn:
            id: btn_main2
            styles: button_style
            y: 100
            height: 50
            width: 200
            group: general
            on_click: 
              then:
                - lvgl.page.show: advanced
            widgets:
              label:
                styles: font_style
                text: "Setting Page"
    - id: arc_page
      widgets:
        - label:
            id: arc_text
            styles: font_style
            text_font: MONTSERRAT_36 # override font size
            y: 30
            x: 30
            text: "Arc Page"
        - label:
            id: arc_value
            styles: font_style
            text_font: MONTSERRAT_36 # override font size
            y: -30
            x: 30
            text: "0"
            # text: !lambda |-
            #   static char buf[8];
            #   snprintf(buf, sizeof(buf), "%0.1f", id(hass light brightness));
            #   return buf;
        - arc: # black arc to erase middle part of meter indicator line
            id: myarc
            height: 450
            width: 450
            align: center
            arc_color: 0x4ED0FF # background color
            arc_width: 20
            value: 50
            group: general
            on_click: 
              then:
                - lvgl.page.show: main_page
            on_value:
              then:
                - lvgl.label.update:
                    id: arc_value
                    text: !lambda |-
                      static char buf[8];
                      snprintf(buf, sizeof(buf), "%0.1f", x);
                      return buf;
            indicator:
              arc_width: 25
              arc_color: 0xFFFFFF
    - id: advanced
      widgets:
        - label:
            styles: font_style
            text_font: MONTSERRAT_36 # override font size
            y: 0 #negative = higher
            x: 0
            text: "Settings Page"
        - btn:
            id: btn_ad
            styles: button_style
            y: 100
            height: 50
            width: 200
            group: general
            on_click: 
              then:
                - lvgl.page.show: main_page
            widgets:
              label:
                styles: font_style
                text: "Exit"